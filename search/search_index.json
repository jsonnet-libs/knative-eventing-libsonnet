{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"knative-eventing Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>1.13.1</li> <li>1.12.4</li> <li>1.11.10</li> </ul>"},{"location":"1.11.10/","title":"knative-eventing","text":"<pre><code>local knative-eventing = import \"github.com/jsonnet-libs/knative-eventing-libsonnet/1.11.10/main.libsonnet\"\n</code></pre> <ul> <li>eventing</li> <li>flows</li> <li>messaging</li> <li>sources</li> </ul>"},{"location":"1.11.10/eventing/","title":"eventing","text":"<ul> <li>v1</li> <li>v1beta1</li> <li>v1beta2</li> </ul>"},{"location":"1.11.10/eventing/v1/","title":"eventing.v1","text":"<ul> <li>broker</li> <li>trigger</li> </ul>"},{"location":"1.11.10/eventing/v1/broker/","title":"eventing.v1.broker","text":"<p>\"Broker collects a pool of events that are consumable using Triggers. Brokers provide a well-known endpoint for event delivery that senders can use with minimal knowledge of the event routing strategy. Subscribers use Triggers to request delivery of events from a Broker's pool to a specific URL or Addressable endpoint.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.config</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/eventing/v1/broker/#fields","title":"Fields","text":""},{"location":"1.11.10/eventing/v1/broker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Broker</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Broker.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-specconfig","title":"obj spec.config","text":"<p>\"Config is a KReference to the configuration that specifies configuration options for this Broker. For example, this could be a pointer to a ConfigMap.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specconfigwithapiversion","title":"fn spec.config.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specconfigwithkind","title":"fn spec.config.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specconfigwithname","title":"fn spec.config.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specconfigwithnamespace","title":"fn spec.config.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for each trigger to this Broker. Each trigger delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/","title":"eventing.v1.trigger","text":"<p>\"Trigger represents a request to have events delivered to a subscriber from a Broker's event pool.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.filter</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/eventing/v1/trigger/#fields","title":"Fields","text":""},{"location":"1.11.10/eventing/v1/trigger/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Trigger</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Trigger.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre> <p>\"Broker is the broker that this trigger receives events from.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for this specific trigger.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specfilter","title":"obj spec.filter","text":"<p>\"Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. If not specified, will default to allowing all events. \"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specfilterwithattributes","title":"fn spec.filter.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specfilterwithattributesmixin","title":"fn spec.filter.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is the addressable that receives events from the Broker that pass the Filter. It is required.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1/trigger/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/eventing/v1beta1/","title":"eventing.v1beta1","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.11.10/eventing/v1beta1/eventType/","title":"eventing.v1beta1.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fields","title":"Fields","text":""},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1beta1/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/eventing/v1beta2/","title":"eventing.v1beta2","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.11.10/eventing/v1beta2/eventType/","title":"eventing.v1beta2.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fields","title":"Fields","text":""},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/eventing/v1beta2/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/","title":"flows","text":"<ul> <li>v1</li> </ul>"},{"location":"1.11.10/flows/v1/","title":"flows.v1","text":"<ul> <li>parallel</li> <li>sequence</li> </ul>"},{"location":"1.11.10/flows/v1/parallel/","title":"flows.v1.parallel","text":"<p>\"Parallel defines conditional branches that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBranches(branches)</code></li> <li><code>fn withBranchesMixin(branches)</code></li> <li><code>obj spec.branches</code><ul> <li><code>obj spec.branches.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.branches.filter</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.filter.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.reply</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.subscriber</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/flows/v1/parallel/#fields","title":"Fields","text":""},{"location":"1.11.10/flows/v1/parallel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Parallel</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Parallel.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specwithbranches","title":"fn spec.withBranches","text":"<pre><code>withBranches(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specwithbranchesmixin","title":"fn spec.withBranchesMixin","text":"<pre><code>withBranchesMixin(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranches","title":"obj spec.branches","text":"<p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesdelivery","title":"obj spec.branches.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffdelay","title":"fn spec.branches.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffpolicy","title":"fn spec.branches.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverywithretry","title":"fn spec.branches.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersink","title":"obj spec.branches.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithcacerts","title":"fn spec.branches.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithuri","title":"fn spec.branches.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersinkref","title":"obj spec.branches.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithapiversion","title":"fn spec.branches.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithkind","title":"fn spec.branches.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithname","title":"fn spec.branches.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithnamespace","title":"fn spec.branches.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesfilter","title":"obj spec.branches.filter","text":"<p>\"Filter is the expression guarding the branch\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterwithcacerts","title":"fn spec.branches.filter.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterwithuri","title":"fn spec.branches.filter.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesfilterref","title":"obj spec.branches.filter.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterrefwithapiversion","title":"fn spec.branches.filter.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterrefwithkind","title":"fn spec.branches.filter.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterrefwithname","title":"fn spec.branches.filter.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesfilterrefwithnamespace","title":"fn spec.branches.filter.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesreply","title":"obj spec.branches.reply","text":"<p>\"Reply is a Reference to where the result of Subscriber of this case gets sent to. If not specified, sent the result to the Parallel Reply\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplywithcacerts","title":"fn spec.branches.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplywithuri","title":"fn spec.branches.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchesreplyref","title":"obj spec.branches.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplyrefwithapiversion","title":"fn spec.branches.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplyrefwithkind","title":"fn spec.branches.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplyrefwithname","title":"fn spec.branches.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchesreplyrefwithnamespace","title":"fn spec.branches.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchessubscriber","title":"obj spec.branches.subscriber","text":"<p>\"Subscriber receiving the event when the filter passes\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberwithcacerts","title":"fn spec.branches.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberwithuri","title":"fn spec.branches.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specbranchessubscriberref","title":"obj spec.branches.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberrefwithapiversion","title":"fn spec.branches.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberrefwithkind","title":"fn spec.branches.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberrefwithname","title":"fn spec.branches.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specbranchessubscriberrefwithnamespace","title":"fn spec.branches.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of a case Subscriber gets sent to when the case does not have a Reply\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/parallel/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/sequence/","title":"flows.v1.sequence","text":"<p>\"Sequence defines a sequence of Subscribers that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.steps</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.steps.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/flows/v1/sequence/#fields","title":"Fields","text":""},{"location":"1.11.10/flows/v1/sequence/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sequence</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Sequence.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specwithsteps","title":"fn spec.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specwithstepsmixin","title":"fn spec.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of the last Subscriber gets sent to.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specsteps","title":"obj spec.steps","text":"<p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepswithcacerts","title":"fn spec.steps.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepswithuri","title":"fn spec.steps.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specstepsdelivery","title":"obj spec.steps.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverywithbackoffdelay","title":"fn spec.steps.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverywithbackoffpolicy","title":"fn spec.steps.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverywithretry","title":"fn spec.steps.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specstepsdeliverydeadlettersink","title":"obj spec.steps.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithcacerts","title":"fn spec.steps.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithuri","title":"fn spec.steps.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specstepsdeliverydeadlettersinkref","title":"obj spec.steps.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithapiversion","title":"fn spec.steps.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithkind","title":"fn spec.steps.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithname","title":"fn spec.steps.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithnamespace","title":"fn spec.steps.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#obj-specstepsref","title":"obj spec.steps.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsrefwithapiversion","title":"fn spec.steps.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsrefwithkind","title":"fn spec.steps.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsrefwithname","title":"fn spec.steps.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/flows/v1/sequence/#fn-specstepsrefwithnamespace","title":"fn spec.steps.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/messaging/","title":"messaging","text":"<ul> <li>v1</li> </ul>"},{"location":"1.11.10/messaging/v1/","title":"messaging.v1","text":"<ul> <li>channel</li> <li>subscription</li> </ul>"},{"location":"1.11.10/messaging/v1/channel/","title":"messaging.v1.channel","text":"<p>\"Channel represents a generic Channel. It is normally used when we want a Channel, but do not need a specific Channel implementation.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSubscribers(subscribers)</code></li> <li><code>fn withSubscribersMixin(subscribers)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.subscribers</code><ul> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withReplyCACerts(replyCACerts)</code></li> <li><code>fn withReplyUri(replyUri)</code></li> <li><code>fn withSubscriberCACerts(subscriberCACerts)</code></li> <li><code>fn withSubscriberUri(subscriberUri)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec.subscribers.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink</code><ul> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/messaging/v1/channel/#fields","title":"Fields","text":""},{"location":"1.11.10/messaging/v1/channel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Channel</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Channel.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specwithsubscribers","title":"fn spec.withSubscribers","text":"<pre><code>withSubscribers(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specwithsubscribersmixin","title":"fn spec.withSubscribersMixin","text":"<pre><code>withSubscribersMixin(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use to create the CRD Channel backing this Channel. This is immutable after creation. Normally this is set by the Channel defaulter, not directly by the user.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"DeliverySpec contains the default delivery spec for each subscription to this Channelable. Each subscription delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specsubscribers","title":"obj spec.subscribers","text":"<p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithgeneration","title":"fn spec.subscribers.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"Generation of the origin of the subscriber with uid:UID.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithreplycacerts","title":"fn spec.subscribers.withReplyCACerts","text":"<pre><code>withReplyCACerts(replyCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithreplyuri","title":"fn spec.subscribers.withReplyUri","text":"<pre><code>withReplyUri(replyUri)\n</code></pre> <p>\"ReplyURI is the endpoint for the reply\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithsubscribercacerts","title":"fn spec.subscribers.withSubscriberCACerts","text":"<pre><code>withSubscriberCACerts(subscriberCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithsubscriberuri","title":"fn spec.subscribers.withSubscriberUri","text":"<pre><code>withSubscriberUri(subscriberUri)\n</code></pre> <p>\"SubscriberURI is the endpoint for the subscriber\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscriberswithuid","title":"fn spec.subscribers.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is used to understand the origin of the subscriber.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specsubscribersdelivery","title":"obj spec.subscribers.delivery","text":"<p>\"DeliverySpec contains options controlling the event delivery\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffdelay","title":"fn spec.subscribers.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffpolicy","title":"fn spec.subscribers.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverywithretry","title":"fn spec.subscribers.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersink","title":"obj spec.subscribers.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkwithuri","title":"fn spec.subscribers.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersinkref","title":"obj spec.subscribers.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithapiversion","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithkind","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithname","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithnamespace","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/","title":"messaging.v1.subscription","text":"<p>\"Subscription routes events received on a Channel to a DNS name and corresponds to the subscriptions.channels.knative.dev CRD.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.channel</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/messaging/v1/subscription/#fields","title":"Fields","text":""},{"location":"1.11.10/messaging/v1/subscription/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Subscription</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-spec","title":"obj spec","text":""},{"location":"1.11.10/messaging/v1/subscription/#obj-specchannel","title":"obj spec.channel","text":"<p>\"Reference to a channel that will be used to create the subscription. You can specify only the following fields of the KReference: kind, apiVersion and name. The resource pointed by this KReference must meet the contract to the ChannelableSpec duck type. If the resource does not meet this contract it will be reflected in the Subscription's status.  This field is immutable. We have no good answer on what happens to the events that are currently in the channel being consumed from and what the semantics there should be. For now, you can always delete the Subscription and recreate it to point to a different channel, giving the user more control over what semantics should be used (drain the channel first, possibly have events dropped, etc.)\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specchannelwithapiversion","title":"fn spec.channel.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specchannelwithkind","title":"fn spec.channel.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specchannelwithname","title":"fn spec.channel.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery configuration\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply specifies (optionally) how to handle events returned from the Subscriber target.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is reference to (optional) function for processing events. Events from the Channel will be delivered here and replies are sent to a Destination as specified by the Reply.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the subscription trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/messaging/v1/subscription/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/sources/","title":"sources","text":"<ul> <li>v1</li> <li>v1beta2</li> </ul>"},{"location":"1.11.10/sources/v1/","title":"sources.v1","text":"<ul> <li>apiServerSource</li> <li>containerSource</li> <li>pingSource</li> <li>sinkBinding</li> </ul>"},{"location":"1.11.10/sources/v1/apiServerSource/","title":"sources.v1.apiServerSource","text":"<p>\"ApiServerSource is an event source that brings Kubernetes API server events into Knative.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.owner</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.resources.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.resources.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/sources/v1/apiServerSource/#fields","title":"Fields","text":""},{"location":"1.11.10/sources/v1/apiServerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApiServerSource</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specwithmode","title":"fn spec.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"EventMode controls the format of the event. <code>Reference</code> sends a dataref event type for the resource under watch. <code>Resource</code> send the full resource lifecycle event. Defaults to <code>Reference</code>\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre> <p>\"ServiceAccountName is the name of the ServiceAccount to use to run this source. Defaults to default if not set.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specnamespaceselector","title":"obj spec.namespaceSelector","text":"<p>\"NamespaceSelector is a label selector to capture the namespaces that should be watched by the source.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressions","title":"fn spec.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabels","title":"fn spec.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabelsmixin","title":"fn spec.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specnamespaceselectormatchexpressions","title":"obj spec.namespaceSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithkey","title":"fn spec.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithoperator","title":"fn spec.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvalues","title":"fn spec.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specowner","title":"obj spec.owner","text":"<p>\"ResourceOwner is an additional filter to only track resources that are owned by a specific resource type. If ResourceOwner matches Resources[n] then Resources[n] is allowed to pass the ResourceOwner filter.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specownerwithapiversion","title":"fn spec.owner.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specownerwithkind","title":"fn spec.owner.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourceswithapiversion","title":"fn spec.resources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specresourcesselector","title":"obj spec.resources.selector","text":"<p>\"LabelSelector filters this source to objects to those resources pass the label selector. More info: http://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressions","title":"fn spec.resources.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressionsmixin","title":"fn spec.resources.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabels","title":"fn spec.resources.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabelsmixin","title":"fn spec.resources.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specresourcesselectormatchexpressions","title":"obj spec.resources.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithkey","title":"fn spec.resources.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithoperator","title":"fn spec.resources.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvalues","title":"fn spec.resources.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvaluesmixin","title":"fn spec.resources.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/sources/v1/apiServerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/","title":"sources.v1.containerSource","text":"<p>\"ContainerSource is an event source that starts a container image which generates events under certain situations and sends messages to a sink URI\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/sources/v1/containerSource/#fields","title":"Fields","text":""},{"location":"1.11.10/sources/v1/containerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ContainerSource</p>"},{"location":"1.11.10/sources/v1/containerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.11.10/sources/v1/containerSource/#fn-specwithtemplate","title":"fn spec.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specwithtemplatemixin","title":"fn spec.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/containerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/sources/v1/containerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/","title":"sources.v1.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/sources/v1/pingSource/#fields","title":"Fields","text":""},{"location":"1.11.10/sources/v1/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.11.10/sources/v1/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/sources/v1/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/","title":"sources.v1.sinkBinding","text":"<p>\"SinkBinding describes a Binding that is also a Source. The <code>sink</code> (from the Source duck) is resolved to a URL and then projected into the <code>subject</code> by augmenting the runtime contract of the referenced containers to have a <code>K_SINK</code> environment variable holding the endpoint to which to send cloud events.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subject</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.subject.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.subject.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/sources/v1/sinkBinding/#fields","title":"Fields","text":""},{"location":"1.11.10/sources/v1/sinkBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of SinkBinding</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-spec","title":"obj spec","text":""},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specsubject","title":"obj spec.subject","text":"<p>\"Subject references the resource(s) whose \\\"runtime contract\\\" should be augmented by Binding implementations.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectwithapiversion","title":"fn spec.subject.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectwithkind","title":"fn spec.subject.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectwithname","title":"fn spec.subject.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. Mutually exclusive with Selector.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectwithnamespace","title":"fn spec.subject.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specsubjectselector","title":"obj spec.subject.selector","text":"<p>\"Selector of the referents. Mutually exclusive with Name.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressions","title":"fn spec.subject.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressionsmixin","title":"fn spec.subject.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabels","title":"fn spec.subject.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabelsmixin","title":"fn spec.subject.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#obj-specsubjectselectormatchexpressions","title":"obj spec.subject.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithkey","title":"fn spec.subject.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithoperator","title":"fn spec.subject.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvalues","title":"fn spec.subject.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.11.10/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvaluesmixin","title":"fn spec.subject.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/","title":"sources.v1beta2","text":"<ul> <li>pingSource</li> </ul>"},{"location":"1.11.10/sources/v1beta2/pingSource/","title":"sources.v1beta2.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fields","title":"Fields","text":""},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.11.10/sources/v1beta2/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/","title":"knative-eventing","text":"<pre><code>local knative-eventing = import \"github.com/jsonnet-libs/knative-eventing-libsonnet/1.12.4/main.libsonnet\"\n</code></pre> <ul> <li>eventing</li> <li>flows</li> <li>messaging</li> <li>sources</li> </ul>"},{"location":"1.12.4/eventing/","title":"eventing","text":"<ul> <li>v1</li> <li>v1beta1</li> <li>v1beta2</li> </ul>"},{"location":"1.12.4/eventing/v1/","title":"eventing.v1","text":"<ul> <li>broker</li> <li>trigger</li> </ul>"},{"location":"1.12.4/eventing/v1/broker/","title":"eventing.v1.broker","text":"<p>\"Broker collects a pool of events that are consumable using Triggers. Brokers provide a well-known endpoint for event delivery that senders can use with minimal knowledge of the event routing strategy. Subscribers use Triggers to request delivery of events from a Broker's pool to a specific URL or Addressable endpoint.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.config</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/eventing/v1/broker/#fields","title":"Fields","text":""},{"location":"1.12.4/eventing/v1/broker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Broker</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Broker.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-specconfig","title":"obj spec.config","text":"<p>\"Config is a KReference to the configuration that specifies configuration options for this Broker. For example, this could be a pointer to a ConfigMap.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specconfigwithapiversion","title":"fn spec.config.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specconfigwithkind","title":"fn spec.config.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specconfigwithname","title":"fn spec.config.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specconfigwithnamespace","title":"fn spec.config.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for each trigger to this Broker. Each trigger delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/","title":"eventing.v1.trigger","text":"<p>\"Trigger represents a request to have events delivered to a subscriber from a Broker's event pool.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.filter</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/eventing/v1/trigger/#fields","title":"Fields","text":""},{"location":"1.12.4/eventing/v1/trigger/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Trigger</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Trigger.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre> <p>\"Broker is the broker that this trigger receives events from.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for this specific trigger.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specfilter","title":"obj spec.filter","text":"<p>\"Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. If not specified, will default to allowing all events. \"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specfilterwithattributes","title":"fn spec.filter.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specfilterwithattributesmixin","title":"fn spec.filter.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is the addressable that receives events from the Broker that pass the Filter. It is required.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberwithaudience","title":"fn spec.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1/trigger/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/eventing/v1beta1/","title":"eventing.v1beta1","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.12.4/eventing/v1beta1/eventType/","title":"eventing.v1beta1.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fields","title":"Fields","text":""},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1beta1/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/eventing/v1beta2/","title":"eventing.v1beta2","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.12.4/eventing/v1beta2/eventType/","title":"eventing.v1beta2.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fields","title":"Fields","text":""},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/eventing/v1beta2/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/","title":"flows","text":"<ul> <li>v1</li> </ul>"},{"location":"1.12.4/flows/v1/","title":"flows.v1","text":"<ul> <li>parallel</li> <li>sequence</li> </ul>"},{"location":"1.12.4/flows/v1/parallel/","title":"flows.v1.parallel","text":"<p>\"Parallel defines conditional branches that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBranches(branches)</code></li> <li><code>fn withBranchesMixin(branches)</code></li> <li><code>obj spec.branches</code><ul> <li><code>obj spec.branches.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.branches.filter</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.filter.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/flows/v1/parallel/#fields","title":"Fields","text":""},{"location":"1.12.4/flows/v1/parallel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Parallel</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Parallel.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specwithbranches","title":"fn spec.withBranches","text":"<pre><code>withBranches(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specwithbranchesmixin","title":"fn spec.withBranchesMixin","text":"<pre><code>withBranchesMixin(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranches","title":"obj spec.branches","text":"<p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesdelivery","title":"obj spec.branches.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffdelay","title":"fn spec.branches.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffpolicy","title":"fn spec.branches.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverywithretry","title":"fn spec.branches.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersink","title":"obj spec.branches.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithaudience","title":"fn spec.branches.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithcacerts","title":"fn spec.branches.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithuri","title":"fn spec.branches.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersinkref","title":"obj spec.branches.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithapiversion","title":"fn spec.branches.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithkind","title":"fn spec.branches.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithname","title":"fn spec.branches.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithnamespace","title":"fn spec.branches.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesfilter","title":"obj spec.branches.filter","text":"<p>\"Filter is the expression guarding the branch\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterwithaudience","title":"fn spec.branches.filter.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterwithcacerts","title":"fn spec.branches.filter.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterwithuri","title":"fn spec.branches.filter.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesfilterref","title":"obj spec.branches.filter.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterrefwithapiversion","title":"fn spec.branches.filter.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterrefwithkind","title":"fn spec.branches.filter.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterrefwithname","title":"fn spec.branches.filter.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesfilterrefwithnamespace","title":"fn spec.branches.filter.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesreply","title":"obj spec.branches.reply","text":"<p>\"Reply is a Reference to where the result of Subscriber of this case gets sent to. If not specified, sent the result to the Parallel Reply\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplywithaudience","title":"fn spec.branches.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplywithcacerts","title":"fn spec.branches.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplywithuri","title":"fn spec.branches.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchesreplyref","title":"obj spec.branches.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplyrefwithapiversion","title":"fn spec.branches.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplyrefwithkind","title":"fn spec.branches.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplyrefwithname","title":"fn spec.branches.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchesreplyrefwithnamespace","title":"fn spec.branches.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchessubscriber","title":"obj spec.branches.subscriber","text":"<p>\"Subscriber receiving the event when the filter passes\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberwithaudience","title":"fn spec.branches.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberwithcacerts","title":"fn spec.branches.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberwithuri","title":"fn spec.branches.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specbranchessubscriberref","title":"obj spec.branches.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberrefwithapiversion","title":"fn spec.branches.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberrefwithkind","title":"fn spec.branches.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberrefwithname","title":"fn spec.branches.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specbranchessubscriberrefwithnamespace","title":"fn spec.branches.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of a case Subscriber gets sent to when the case does not have a Reply\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplywithaudience","title":"fn spec.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/parallel/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/sequence/","title":"flows.v1.sequence","text":"<p>\"Sequence defines a sequence of Subscribers that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.steps</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.steps.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/flows/v1/sequence/#fields","title":"Fields","text":""},{"location":"1.12.4/flows/v1/sequence/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sequence</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Sequence.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specwithsteps","title":"fn spec.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specwithstepsmixin","title":"fn spec.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of the last Subscriber gets sent to.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the reply.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specsteps","title":"obj spec.steps","text":"<p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepswithaudience","title":"fn spec.steps.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepswithcacerts","title":"fn spec.steps.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepswithuri","title":"fn spec.steps.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specstepsdelivery","title":"obj spec.steps.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverywithbackoffdelay","title":"fn spec.steps.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverywithbackoffpolicy","title":"fn spec.steps.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverywithretry","title":"fn spec.steps.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specstepsdeliverydeadlettersink","title":"obj spec.steps.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithaudience","title":"fn spec.steps.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithcacerts","title":"fn spec.steps.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithuri","title":"fn spec.steps.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specstepsdeliverydeadlettersinkref","title":"obj spec.steps.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithapiversion","title":"fn spec.steps.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithkind","title":"fn spec.steps.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithname","title":"fn spec.steps.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithnamespace","title":"fn spec.steps.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#obj-specstepsref","title":"obj spec.steps.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsrefwithapiversion","title":"fn spec.steps.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsrefwithkind","title":"fn spec.steps.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsrefwithname","title":"fn spec.steps.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/flows/v1/sequence/#fn-specstepsrefwithnamespace","title":"fn spec.steps.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/messaging/","title":"messaging","text":"<ul> <li>v1</li> </ul>"},{"location":"1.12.4/messaging/v1/","title":"messaging.v1","text":"<ul> <li>channel</li> <li>subscription</li> </ul>"},{"location":"1.12.4/messaging/v1/channel/","title":"messaging.v1.channel","text":"<p>\"Channel represents a generic Channel. It is normally used when we want a Channel, but do not need a specific Channel implementation.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSubscribers(subscribers)</code></li> <li><code>fn withSubscribersMixin(subscribers)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.subscribers</code><ul> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withReplyAudience(replyAudience)</code></li> <li><code>fn withReplyCACerts(replyCACerts)</code></li> <li><code>fn withReplyUri(replyUri)</code></li> <li><code>fn withSubscriberAudience(subscriberAudience)</code></li> <li><code>fn withSubscriberCACerts(subscriberCACerts)</code></li> <li><code>fn withSubscriberUri(subscriberUri)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec.subscribers.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink</code><ul> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/messaging/v1/channel/#fields","title":"Fields","text":""},{"location":"1.12.4/messaging/v1/channel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Channel</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Channel.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specwithsubscribers","title":"fn spec.withSubscribers","text":"<pre><code>withSubscribers(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specwithsubscribersmixin","title":"fn spec.withSubscribersMixin","text":"<pre><code>withSubscribersMixin(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use to create the CRD Channel backing this Channel. This is immutable after creation. Normally this is set by the Channel defaulter, not directly by the user.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"DeliverySpec contains the default delivery spec for each subscription to this Channelable. Each subscription delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specsubscribers","title":"obj spec.subscribers","text":"<p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithgeneration","title":"fn spec.subscribers.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"Generation of the origin of the subscriber with uid:UID.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithreplyaudience","title":"fn spec.subscribers.withReplyAudience","text":"<pre><code>withReplyAudience(replyAudience)\n</code></pre> <p>\"ReplyAudience is the OIDC audience for the replyUri.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithreplycacerts","title":"fn spec.subscribers.withReplyCACerts","text":"<pre><code>withReplyCACerts(replyCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithreplyuri","title":"fn spec.subscribers.withReplyUri","text":"<pre><code>withReplyUri(replyUri)\n</code></pre> <p>\"ReplyURI is the endpoint for the reply\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithsubscriberaudience","title":"fn spec.subscribers.withSubscriberAudience","text":"<pre><code>withSubscriberAudience(subscriberAudience)\n</code></pre> <p>\"SubscriberAudience is the OIDC audience for the subscriberUri.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithsubscribercacerts","title":"fn spec.subscribers.withSubscriberCACerts","text":"<pre><code>withSubscriberCACerts(subscriberCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithsubscriberuri","title":"fn spec.subscribers.withSubscriberUri","text":"<pre><code>withSubscriberUri(subscriberUri)\n</code></pre> <p>\"SubscriberURI is the endpoint for the subscriber\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscriberswithuid","title":"fn spec.subscribers.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is used to understand the origin of the subscriber.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specsubscribersdelivery","title":"obj spec.subscribers.delivery","text":"<p>\"DeliverySpec contains options controlling the event delivery\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffdelay","title":"fn spec.subscribers.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffpolicy","title":"fn spec.subscribers.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverywithretry","title":"fn spec.subscribers.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersink","title":"obj spec.subscribers.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkwithuri","title":"fn spec.subscribers.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersinkref","title":"obj spec.subscribers.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithapiversion","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithkind","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithname","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithnamespace","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/","title":"messaging.v1.subscription","text":"<p>\"Subscription routes events received on a Channel to a DNS name and corresponds to the subscriptions.channels.knative.dev CRD.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.channel</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/messaging/v1/subscription/#fields","title":"Fields","text":""},{"location":"1.12.4/messaging/v1/subscription/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Subscription</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-spec","title":"obj spec","text":""},{"location":"1.12.4/messaging/v1/subscription/#obj-specchannel","title":"obj spec.channel","text":"<p>\"Reference to a channel that will be used to create the subscription. You can specify only the following fields of the KReference: kind, apiVersion and name. The resource pointed by this KReference must meet the contract to the ChannelableSpec duck type. If the resource does not meet this contract it will be reflected in the Subscription's status.  This field is immutable. We have no good answer on what happens to the events that are currently in the channel being consumed from and what the semantics there should be. For now, you can always delete the Subscription and recreate it to point to a different channel, giving the user more control over what semantics should be used (drain the channel first, possibly have events dropped, etc.)\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specchannelwithapiversion","title":"fn spec.channel.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specchannelwithkind","title":"fn spec.channel.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specchannelwithname","title":"fn spec.channel.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery configuration\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply specifies (optionally) how to handle events returned from the Subscriber target.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplywithaudience","title":"fn spec.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is reference to (optional) function for processing events. Events from the Channel will be delivered here and replies are sent to a Destination as specified by the Reply.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberwithaudience","title":"fn spec.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the subscription trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/messaging/v1/subscription/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/sources/","title":"sources","text":"<ul> <li>v1</li> <li>v1beta2</li> </ul>"},{"location":"1.12.4/sources/v1/","title":"sources.v1","text":"<ul> <li>apiServerSource</li> <li>containerSource</li> <li>pingSource</li> <li>sinkBinding</li> </ul>"},{"location":"1.12.4/sources/v1/apiServerSource/","title":"sources.v1.apiServerSource","text":"<p>\"ApiServerSource is an event source that brings Kubernetes API server events into Knative.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.owner</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.resources.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.resources.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/sources/v1/apiServerSource/#fields","title":"Fields","text":""},{"location":"1.12.4/sources/v1/apiServerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApiServerSource</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specwithmode","title":"fn spec.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"EventMode controls the format of the event. <code>Reference</code> sends a dataref event type for the resource under watch. <code>Resource</code> send the full resource lifecycle event. Defaults to <code>Reference</code>\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre> <p>\"ServiceAccountName is the name of the ServiceAccount to use to run this source. Defaults to default if not set.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specnamespaceselector","title":"obj spec.namespaceSelector","text":"<p>\"NamespaceSelector is a label selector to capture the namespaces that should be watched by the source.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressions","title":"fn spec.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabels","title":"fn spec.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabelsmixin","title":"fn spec.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specnamespaceselectormatchexpressions","title":"obj spec.namespaceSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithkey","title":"fn spec.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithoperator","title":"fn spec.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvalues","title":"fn spec.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specowner","title":"obj spec.owner","text":"<p>\"ResourceOwner is an additional filter to only track resources that are owned by a specific resource type. If ResourceOwner matches Resources[n] then Resources[n] is allowed to pass the ResourceOwner filter.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specownerwithapiversion","title":"fn spec.owner.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specownerwithkind","title":"fn spec.owner.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourceswithapiversion","title":"fn spec.resources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specresourcesselector","title":"obj spec.resources.selector","text":"<p>\"LabelSelector filters this source to objects to those resources pass the label selector. More info: http://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressions","title":"fn spec.resources.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressionsmixin","title":"fn spec.resources.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabels","title":"fn spec.resources.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabelsmixin","title":"fn spec.resources.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specresourcesselectormatchexpressions","title":"obj spec.resources.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithkey","title":"fn spec.resources.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithoperator","title":"fn spec.resources.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvalues","title":"fn spec.resources.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvaluesmixin","title":"fn spec.resources.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/sources/v1/apiServerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/","title":"sources.v1.containerSource","text":"<p>\"ContainerSource is an event source that starts a container image which generates events under certain situations and sends messages to a sink URI\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/sources/v1/containerSource/#fields","title":"Fields","text":""},{"location":"1.12.4/sources/v1/containerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ContainerSource</p>"},{"location":"1.12.4/sources/v1/containerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.12.4/sources/v1/containerSource/#fn-specwithtemplate","title":"fn spec.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specwithtemplatemixin","title":"fn spec.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/containerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/sources/v1/containerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/","title":"sources.v1.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/sources/v1/pingSource/#fields","title":"Fields","text":""},{"location":"1.12.4/sources/v1/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.12.4/sources/v1/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/sources/v1/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/","title":"sources.v1.sinkBinding","text":"<p>\"SinkBinding describes a Binding that is also a Source. The <code>sink</code> (from the Source duck) is resolved to a URL and then projected into the <code>subject</code> by augmenting the runtime contract of the referenced containers to have a <code>K_SINK</code> environment variable holding the endpoint to which to send cloud events.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subject</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.subject.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.subject.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/sources/v1/sinkBinding/#fields","title":"Fields","text":""},{"location":"1.12.4/sources/v1/sinkBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of SinkBinding</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-spec","title":"obj spec","text":""},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specsubject","title":"obj spec.subject","text":"<p>\"Subject references the resource(s) whose \\\"runtime contract\\\" should be augmented by Binding implementations.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectwithapiversion","title":"fn spec.subject.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectwithkind","title":"fn spec.subject.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectwithname","title":"fn spec.subject.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. Mutually exclusive with Selector.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectwithnamespace","title":"fn spec.subject.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specsubjectselector","title":"obj spec.subject.selector","text":"<p>\"Selector of the referents. Mutually exclusive with Name.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressions","title":"fn spec.subject.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressionsmixin","title":"fn spec.subject.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabels","title":"fn spec.subject.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabelsmixin","title":"fn spec.subject.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#obj-specsubjectselectormatchexpressions","title":"obj spec.subject.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithkey","title":"fn spec.subject.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithoperator","title":"fn spec.subject.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvalues","title":"fn spec.subject.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.12.4/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvaluesmixin","title":"fn spec.subject.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/","title":"sources.v1beta2","text":"<ul> <li>pingSource</li> </ul>"},{"location":"1.12.4/sources/v1beta2/pingSource/","title":"sources.v1beta2.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fields","title":"Fields","text":""},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.12.4/sources/v1beta2/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/","title":"knative-eventing","text":"<pre><code>local knative-eventing = import \"github.com/jsonnet-libs/knative-eventing-libsonnet/1.13.1/main.libsonnet\"\n</code></pre> <ul> <li>eventing</li> <li>flows</li> <li>messaging</li> <li>sources</li> </ul>"},{"location":"1.13.1/eventing/","title":"eventing","text":"<ul> <li>v1</li> <li>v1beta1</li> <li>v1beta2</li> </ul>"},{"location":"1.13.1/eventing/v1/","title":"eventing.v1","text":"<ul> <li>broker</li> <li>trigger</li> </ul>"},{"location":"1.13.1/eventing/v1/broker/","title":"eventing.v1.broker","text":"<p>\"Broker collects a pool of events that are consumable using Triggers. Brokers provide a well-known endpoint for event delivery that senders can use with minimal knowledge of the event routing strategy. Subscribers use Triggers to request delivery of events from a Broker's pool to a specific URL or Addressable endpoint.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.config</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/eventing/v1/broker/#fields","title":"Fields","text":""},{"location":"1.13.1/eventing/v1/broker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Broker</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Broker.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-specconfig","title":"obj spec.config","text":"<p>\"Config is a KReference to the configuration that specifies configuration options for this Broker. For example, this could be a pointer to a ConfigMap.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specconfigwithapiversion","title":"fn spec.config.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specconfigwithkind","title":"fn spec.config.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specconfigwithname","title":"fn spec.config.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specconfigwithnamespace","title":"fn spec.config.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for each trigger to this Broker. Each trigger delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1/broker/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/","title":"eventing.v1.trigger","text":"<p>\"Trigger represents a request to have events delivered to a subscriber from a Broker's event pool.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.filter</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/eventing/v1/trigger/#fields","title":"Fields","text":""},{"location":"1.13.1/eventing/v1/trigger/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Trigger</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Trigger.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre> <p>\"Broker is the broker that this trigger receives events from.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery contains the delivery spec for this specific trigger.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specfilter","title":"obj spec.filter","text":"<p>\"Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. If not specified, will default to allowing all events. \"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specfilterwithattributes","title":"fn spec.filter.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specfilterwithattributesmixin","title":"fn spec.filter.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported. \"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is the addressable that receives events from the Broker that pass the Filter. It is required.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberwithaudience","title":"fn spec.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1/trigger/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/eventing/v1beta1/","title":"eventing.v1beta1","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.13.1/eventing/v1beta1/eventType/","title":"eventing.v1beta1.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fields","title":"Fields","text":""},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1beta1/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/eventing/v1beta2/","title":"eventing.v1beta2","text":"<ul> <li>eventType</li> </ul>"},{"location":"1.13.1/eventing/v1beta2/eventType/","title":"eventing.v1beta2.eventType","text":"<p>\"EventType represents a type of event that can be consumed from a Broker.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBroker(broker)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withSchema(schema)</code></li> <li><code>fn withSchemaData(schemaData)</code></li> <li><code>fn withSource(source)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.reference</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fields","title":"Fields","text":""},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EventType</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the EventType.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithbroker","title":"fn spec.withBroker","text":"<pre><code>withBroker(broker)\n</code></pre>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is an optional field used to describe the EventType, in any meaningful way.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithschema","title":"fn spec.withSchema","text":"<pre><code>withSchema(schema)\n</code></pre> <p>\"Schema is a URI, it represents the CloudEvents schemaurl extension attribute. It may be a JSON schema, a protobuf schema, etc. It is optional.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithschemadata","title":"fn spec.withSchemaData","text":"<pre><code>withSchemaData(schemaData)\n</code></pre> <p>\"SchemaData allows the CloudEvents schema to be stored directly in the EventType. Content is dependent on the encoding. Optional attribute. The contents are not validated or manipulated by the system.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithsource","title":"fn spec.withSource","text":"<pre><code>withSource(source)\n</code></pre> <p>\"Source is a URI, it represents the CloudEvents source.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type represents the CloudEvents type. It is authoritative.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#obj-specreference","title":"obj spec.reference","text":"<p>\"Reference Broker. For example\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specreferencewithapiversion","title":"fn spec.reference.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specreferencewithkind","title":"fn spec.reference.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specreferencewithname","title":"fn spec.reference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/eventing/v1beta2/eventType/#fn-specreferencewithnamespace","title":"fn spec.reference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is an optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/","title":"flows","text":"<ul> <li>v1</li> </ul>"},{"location":"1.13.1/flows/v1/","title":"flows.v1","text":"<ul> <li>parallel</li> <li>sequence</li> </ul>"},{"location":"1.13.1/flows/v1/parallel/","title":"flows.v1.parallel","text":"<p>\"Parallel defines conditional branches that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBranches(branches)</code></li> <li><code>fn withBranchesMixin(branches)</code></li> <li><code>obj spec.branches</code><ul> <li><code>obj spec.branches.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.branches.filter</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.filter.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.branches.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.branches.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/flows/v1/parallel/#fields","title":"Fields","text":""},{"location":"1.13.1/flows/v1/parallel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Parallel</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Parallel.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specwithbranches","title":"fn spec.withBranches","text":"<pre><code>withBranches(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specwithbranchesmixin","title":"fn spec.withBranchesMixin","text":"<pre><code>withBranchesMixin(branches)\n</code></pre> <p>\"Branches is the list of Filter/Subscribers pairs.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranches","title":"obj spec.branches","text":"<p>\"Branches is the list of Filter/Subscribers pairs.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesdelivery","title":"obj spec.branches.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffdelay","title":"fn spec.branches.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverywithbackoffpolicy","title":"fn spec.branches.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverywithretry","title":"fn spec.branches.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersink","title":"obj spec.branches.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithaudience","title":"fn spec.branches.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithcacerts","title":"fn spec.branches.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkwithuri","title":"fn spec.branches.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesdeliverydeadlettersinkref","title":"obj spec.branches.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithapiversion","title":"fn spec.branches.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithkind","title":"fn spec.branches.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithname","title":"fn spec.branches.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesdeliverydeadlettersinkrefwithnamespace","title":"fn spec.branches.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesfilter","title":"obj spec.branches.filter","text":"<p>\"Filter is the expression guarding the branch\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterwithaudience","title":"fn spec.branches.filter.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterwithcacerts","title":"fn spec.branches.filter.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterwithuri","title":"fn spec.branches.filter.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesfilterref","title":"obj spec.branches.filter.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterrefwithapiversion","title":"fn spec.branches.filter.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterrefwithkind","title":"fn spec.branches.filter.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterrefwithname","title":"fn spec.branches.filter.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesfilterrefwithnamespace","title":"fn spec.branches.filter.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesreply","title":"obj spec.branches.reply","text":"<p>\"Reply is a Reference to where the result of Subscriber of this case gets sent to. If not specified, sent the result to the Parallel Reply\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplywithaudience","title":"fn spec.branches.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplywithcacerts","title":"fn spec.branches.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplywithuri","title":"fn spec.branches.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchesreplyref","title":"obj spec.branches.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplyrefwithapiversion","title":"fn spec.branches.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplyrefwithkind","title":"fn spec.branches.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplyrefwithname","title":"fn spec.branches.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchesreplyrefwithnamespace","title":"fn spec.branches.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchessubscriber","title":"obj spec.branches.subscriber","text":"<p>\"Subscriber receiving the event when the filter passes\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberwithaudience","title":"fn spec.branches.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberwithcacerts","title":"fn spec.branches.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberwithuri","title":"fn spec.branches.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specbranchessubscriberref","title":"obj spec.branches.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberrefwithapiversion","title":"fn spec.branches.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberrefwithkind","title":"fn spec.branches.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberrefwithname","title":"fn spec.branches.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specbranchessubscriberrefwithnamespace","title":"fn spec.branches.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of a case Subscriber gets sent to when the case does not have a Reply\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplywithaudience","title":"fn spec.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/parallel/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/sequence/","title":"flows.v1.sequence","text":"<p>\"Sequence defines a sequence of Subscribers that will be wired in series through Channels and Subscriptions.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.steps</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.steps.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.steps.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/flows/v1/sequence/#fields","title":"Fields","text":""},{"location":"1.13.1/flows/v1/sequence/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sequence</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Sequence.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specwithsteps","title":"fn spec.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specwithstepsmixin","title":"fn spec.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply is a Reference to where the result of the last Subscriber gets sent to.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplywithaudience","title":"fn spec.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience of the reply. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the reply.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specsteps","title":"obj spec.steps","text":"<p>\"Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepswithaudience","title":"fn spec.steps.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepswithcacerts","title":"fn spec.steps.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepswithuri","title":"fn spec.steps.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specstepsdelivery","title":"obj spec.steps.delivery","text":"<p>\"Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverywithbackoffdelay","title":"fn spec.steps.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverywithbackoffpolicy","title":"fn spec.steps.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverywithretry","title":"fn spec.steps.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specstepsdeliverydeadlettersink","title":"obj spec.steps.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithaudience","title":"fn spec.steps.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithcacerts","title":"fn spec.steps.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkwithuri","title":"fn spec.steps.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specstepsdeliverydeadlettersinkref","title":"obj spec.steps.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithapiversion","title":"fn spec.steps.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithkind","title":"fn spec.steps.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithname","title":"fn spec.steps.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsdeliverydeadlettersinkrefwithnamespace","title":"fn spec.steps.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#obj-specstepsref","title":"obj spec.steps.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsrefwithapiversion","title":"fn spec.steps.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsrefwithkind","title":"fn spec.steps.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsrefwithname","title":"fn spec.steps.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/flows/v1/sequence/#fn-specstepsrefwithnamespace","title":"fn spec.steps.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/messaging/","title":"messaging","text":"<ul> <li>v1</li> </ul>"},{"location":"1.13.1/messaging/v1/","title":"messaging.v1","text":"<ul> <li>channel</li> <li>subscription</li> </ul>"},{"location":"1.13.1/messaging/v1/channel/","title":"messaging.v1.channel","text":"<p>\"Channel represents a generic Channel. It is normally used when we want a Channel, but do not need a specific Channel implementation.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withSubscribers(subscribers)</code></li> <li><code>fn withSubscribersMixin(subscribers)</code></li> <li><code>obj spec.channelTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSpec(spec)</code></li> <li><code>fn withSpecMixin(spec)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.subscribers</code><ul> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withReplyAudience(replyAudience)</code></li> <li><code>fn withReplyCACerts(replyCACerts)</code></li> <li><code>fn withReplyUri(replyUri)</code></li> <li><code>fn withSubscriberAudience(subscriberAudience)</code></li> <li><code>fn withSubscriberCACerts(subscriberCACerts)</code></li> <li><code>fn withSubscriberUri(subscriberUri)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec.subscribers.auth</code><ul> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> </ul> </li> <li><code>obj spec.subscribers.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink</code><ul> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscribers.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/messaging/v1/channel/#fields","title":"Fields","text":""},{"location":"1.13.1/messaging/v1/channel/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Channel</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-spec","title":"obj spec","text":"<p>\"Spec defines the desired state of the Channel.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specwithsubscribers","title":"fn spec.withSubscribers","text":"<pre><code>withSubscribers(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specwithsubscribersmixin","title":"fn spec.withSubscribersMixin","text":"<pre><code>withSubscribersMixin(subscribers)\n</code></pre> <p>\"This is the list of subscriptions for this subscribable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specchanneltemplate","title":"obj spec.channelTemplate","text":"<p>\"ChannelTemplate specifies which Channel CRD to use to create the CRD Channel backing this Channel. This is immutable after creation. Normally this is set by the Channel defaulter, not directly by the user.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specchanneltemplatewithapiversion","title":"fn spec.channelTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specchanneltemplatewithkind","title":"fn spec.channelTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specchanneltemplatewithspec","title":"fn spec.channelTemplate.withSpec","text":"<pre><code>withSpec(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specchanneltemplatewithspecmixin","title":"fn spec.channelTemplate.withSpecMixin","text":"<pre><code>withSpecMixin(spec)\n</code></pre> <p>\"Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"DeliverySpec contains the default delivery spec for each subscription to this Channelable. Each subscription delivery spec, if any, overrides this global delivery spec.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specsubscribers","title":"obj spec.subscribers","text":"<p>\"This is the list of subscriptions for this subscribable.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithgeneration","title":"fn spec.subscribers.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"Generation of the origin of the subscriber with uid:UID.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithreplyaudience","title":"fn spec.subscribers.withReplyAudience","text":"<pre><code>withReplyAudience(replyAudience)\n</code></pre> <p>\"ReplyAudience is the OIDC audience for the replyUri.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithreplycacerts","title":"fn spec.subscribers.withReplyCACerts","text":"<pre><code>withReplyCACerts(replyCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithreplyuri","title":"fn spec.subscribers.withReplyUri","text":"<pre><code>withReplyUri(replyUri)\n</code></pre> <p>\"ReplyURI is the endpoint for the reply\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithsubscriberaudience","title":"fn spec.subscribers.withSubscriberAudience","text":"<pre><code>withSubscriberAudience(subscriberAudience)\n</code></pre> <p>\"SubscriberAudience is the OIDC audience for the subscriberUri.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithsubscribercacerts","title":"fn spec.subscribers.withSubscriberCACerts","text":"<pre><code>withSubscriberCACerts(subscriberCACerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithsubscriberuri","title":"fn spec.subscribers.withSubscriberUri","text":"<pre><code>withSubscriberUri(subscriberUri)\n</code></pre> <p>\"SubscriberURI is the endpoint for the subscriber\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscriberswithuid","title":"fn spec.subscribers.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is used to understand the origin of the subscriber.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specsubscribersauth","title":"obj spec.subscribers.auth","text":"<p>\"Auth provides the relevant information for OIDC authentication.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersauthwithserviceaccountname","title":"fn spec.subscribers.auth.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre> <p>\"ServiceAccountName is the name of the generated service account used for this components OIDC authentication.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specsubscribersdelivery","title":"obj spec.subscribers.delivery","text":"<p>\"DeliverySpec contains options controlling the event delivery\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffdelay","title":"fn spec.subscribers.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverywithbackoffpolicy","title":"fn spec.subscribers.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverywithretry","title":"fn spec.subscribers.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersink","title":"obj spec.subscribers.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkwithuri","title":"fn spec.subscribers.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#obj-specsubscribersdeliverydeadlettersinkref","title":"obj spec.subscribers.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithapiversion","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithkind","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithname","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/channel/#fn-specsubscribersdeliverydeadlettersinkrefwithnamespace","title":"fn spec.subscribers.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/","title":"messaging.v1.subscription","text":"<p>\"Subscription routes events received on a Channel to a DNS name and corresponds to the subscriptions.channels.knative.dev CRD.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.channel</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.delivery</code><ul> <li><code>fn withBackoffDelay(backoffDelay)</code></li> <li><code>fn withBackoffPolicy(backoffPolicy)</code></li> <li><code>fn withRetry(retry)</code></li> <li><code>obj spec.delivery.deadLetterSink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.delivery.deadLetterSink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.reply</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.reply.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subscriber</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.subscriber.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/messaging/v1/subscription/#fields","title":"Fields","text":""},{"location":"1.13.1/messaging/v1/subscription/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Subscription</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-spec","title":"obj spec","text":""},{"location":"1.13.1/messaging/v1/subscription/#obj-specchannel","title":"obj spec.channel","text":"<p>\"Reference to a channel that will be used to create the subscription. You can specify only the following fields of the KReference: kind, apiVersion and name. The resource pointed by this KReference must meet the contract to the ChannelableSpec duck type. If the resource does not meet this contract it will be reflected in the Subscription's status.  This field is immutable. We have no good answer on what happens to the events that are currently in the channel being consumed from and what the semantics there should be. For now, you can always delete the Subscription and recreate it to point to a different channel, giving the user more control over what semantics should be used (drain the channel first, possibly have events dropped, etc.)\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specchannelwithapiversion","title":"fn spec.channel.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specchannelwithkind","title":"fn spec.channel.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specchannelwithname","title":"fn spec.channel.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specdelivery","title":"obj spec.delivery","text":"<p>\"Delivery configuration\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverywithbackoffdelay","title":"fn spec.delivery.withBackoffDelay","text":"<pre><code>withBackoffDelay(backoffDelay)\n</code></pre> <p>\"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay. For exponential policy, backoff delay is backoffDelay2^.\""},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverywithbackoffpolicy","title":"fn spec.delivery.withBackoffPolicy","text":"<pre><code>withBackoffPolicy(backoffPolicy)\n</code></pre> <p>\"BackoffPolicy is the retry backoff policy (linear, exponential).\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverywithretry","title":"fn spec.delivery.withRetry","text":"<pre><code>withRetry(retry)\n</code></pre> <p>\"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specdeliverydeadlettersink","title":"obj spec.delivery.deadLetterSink","text":"<p>\"DeadLetterSink is the sink receiving event that could not be sent to a destination.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithaudience","title":"fn spec.delivery.deadLetterSink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithcacerts","title":"fn spec.delivery.deadLetterSink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkwithuri","title":"fn spec.delivery.deadLetterSink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specdeliverydeadlettersinkref","title":"obj spec.delivery.deadLetterSink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithapiversion","title":"fn spec.delivery.deadLetterSink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithkind","title":"fn spec.delivery.deadLetterSink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithname","title":"fn spec.delivery.deadLetterSink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specdeliverydeadlettersinkrefwithnamespace","title":"fn spec.delivery.deadLetterSink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specreply","title":"obj spec.reply","text":"<p>\"Reply specifies (optionally) how to handle events returned from the Subscriber target.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplywithaudience","title":"fn spec.reply.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplywithcacerts","title":"fn spec.reply.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplywithuri","title":"fn spec.reply.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specreplyref","title":"obj spec.reply.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplyrefwithapiversion","title":"fn spec.reply.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplyrefwithkind","title":"fn spec.reply.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplyrefwithname","title":"fn spec.reply.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specreplyrefwithnamespace","title":"fn spec.reply.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specsubscriber","title":"obj spec.subscriber","text":"<p>\"Subscriber is reference to (optional) function for processing events. Events from the Channel will be delivered here and replies are sent to a Destination as specified by the Reply.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberwithaudience","title":"fn spec.subscriber.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberwithcacerts","title":"fn spec.subscriber.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"Certification Authority (CA) certificates in PEM format that the subscription trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberwithuri","title":"fn spec.subscriber.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#obj-specsubscriberref","title":"obj spec.subscriber.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberrefwithapiversion","title":"fn spec.subscriber.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberrefwithkind","title":"fn spec.subscriber.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberrefwithname","title":"fn spec.subscriber.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/messaging/v1/subscription/#fn-specsubscriberrefwithnamespace","title":"fn spec.subscriber.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/sources/","title":"sources","text":"<ul> <li>v1</li> <li>v1beta2</li> </ul>"},{"location":"1.13.1/sources/v1/","title":"sources.v1","text":"<ul> <li>apiServerSource</li> <li>containerSource</li> <li>pingSource</li> <li>sinkBinding</li> </ul>"},{"location":"1.13.1/sources/v1/apiServerSource/","title":"sources.v1.apiServerSource","text":"<p>\"ApiServerSource is an event source that brings Kubernetes API server events into Knative.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.owner</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.resources.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.resources.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/sources/v1/apiServerSource/#fields","title":"Fields","text":""},{"location":"1.13.1/sources/v1/apiServerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApiServerSource</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specwithmode","title":"fn spec.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"EventMode controls the format of the event. <code>Reference</code> sends a dataref event type for the resource under watch. <code>Resource</code> send the full resource lifecycle event. Defaults to <code>Reference</code>\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre> <p>\"ServiceAccountName is the name of the ServiceAccount to use to run this source. Defaults to default if not set.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specnamespaceselector","title":"obj spec.namespaceSelector","text":"<p>\"NamespaceSelector is a label selector to capture the namespaces that should be watched by the source.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressions","title":"fn spec.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabels","title":"fn spec.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectorwithmatchlabelsmixin","title":"fn spec.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specnamespaceselectormatchexpressions","title":"obj spec.namespaceSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithkey","title":"fn spec.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithoperator","title":"fn spec.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvalues","title":"fn spec.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specowner","title":"obj spec.owner","text":"<p>\"ResourceOwner is an additional filter to only track resources that are owned by a specific resource type. If ResourceOwner matches Resources[n] then Resources[n] is allowed to pass the ResourceOwner filter.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specownerwithapiversion","title":"fn spec.owner.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specownerwithkind","title":"fn spec.owner.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resource are the resources this source will track and send related lifecycle events from the Kubernetes ApiServer, with an optional label selector to help filter.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourceswithapiversion","title":"fn spec.resources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion - the API version of the resource to watch.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specresourcesselector","title":"obj spec.resources.selector","text":"<p>\"LabelSelector filters this source to objects to those resources pass the label selector. More info: http://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressions","title":"fn spec.resources.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchexpressionsmixin","title":"fn spec.resources.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabels","title":"fn spec.resources.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectorwithmatchlabelsmixin","title":"fn spec.resources.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specresourcesselectormatchexpressions","title":"obj spec.resources.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithkey","title":"fn spec.resources.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithoperator","title":"fn spec.resources.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvalues","title":"fn spec.resources.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specresourcesselectormatchexpressionswithvaluesmixin","title":"fn spec.resources.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/sources/v1/apiServerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/","title":"sources.v1.containerSource","text":"<p>\"ContainerSource is an event source that starts a container image which generates events under certain situations and sends messages to a sink URI\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/sources/v1/containerSource/#fields","title":"Fields","text":""},{"location":"1.13.1/sources/v1/containerSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ContainerSource</p>"},{"location":"1.13.1/sources/v1/containerSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#obj-spec","title":"obj spec","text":""},{"location":"1.13.1/sources/v1/containerSource/#fn-specwithtemplate","title":"fn spec.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specwithtemplatemixin","title":"fn spec.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"A template in the shape of <code>Deployment.spec.template</code> to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/containerSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/sources/v1/containerSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/","title":"sources.v1.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/sources/v1/pingSource/#fields","title":"Fields","text":""},{"location":"1.13.1/sources/v1/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.13.1/sources/v1/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/sources/v1/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/","title":"sources.v1.sinkBinding","text":"<p>\"SinkBinding describes a Binding that is also a Source. The <code>sink</code> (from the Source duck) is resolved to a URL and then projected into the <code>subject</code> by augmenting the runtime contract of the referenced containers to have a <code>K_SINK</code> environment variable holding the endpoint to which to send cloud events.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subject</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.subject.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.subject.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/sources/v1/sinkBinding/#fields","title":"Fields","text":""},{"location":"1.13.1/sources/v1/sinkBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of SinkBinding</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-spec","title":"obj spec","text":""},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specsubject","title":"obj spec.subject","text":"<p>\"Subject references the resource(s) whose \\\"runtime contract\\\" should be augmented by Binding implementations.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectwithapiversion","title":"fn spec.subject.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectwithkind","title":"fn spec.subject.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectwithname","title":"fn spec.subject.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. Mutually exclusive with Selector.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectwithnamespace","title":"fn spec.subject.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specsubjectselector","title":"obj spec.subject.selector","text":"<p>\"Selector of the referents. Mutually exclusive with Name.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressions","title":"fn spec.subject.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchexpressionsmixin","title":"fn spec.subject.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabels","title":"fn spec.subject.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectorwithmatchlabelsmixin","title":"fn spec.subject.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#obj-specsubjectselectormatchexpressions","title":"obj spec.subject.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithkey","title":"fn spec.subject.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithoperator","title":"fn spec.subject.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvalues","title":"fn spec.subject.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"1.13.1/sources/v1/sinkBinding/#fn-specsubjectselectormatchexpressionswithvaluesmixin","title":"fn spec.subject.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/","title":"sources.v1beta2","text":"<ul> <li>pingSource</li> </ul>"},{"location":"1.13.1/sources/v1beta2/pingSource/","title":"sources.v1beta2.pingSource","text":"<p>\"PingSource describes an event source with a fixed payload produced on a specified cron schedule.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withContentType(contentType)</code></li> <li><code>fn withData(data)</code></li> <li><code>fn withDataBase64(dataBase64)</code></li> <li><code>fn withSchedule(schedule)</code></li> <li><code>fn withTimezone(timezone)</code></li> <li><code>obj spec.ceOverrides</code><ul> <li><code>fn withExtensions(extensions)</code></li> <li><code>fn withExtensionsMixin(extensions)</code></li> </ul> </li> <li><code>obj spec.sink</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withCaCerts(caCerts)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.sink.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fields","title":"Fields","text":""},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PingSource</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#obj-spec","title":"obj spec","text":"<p>\"PingSourceSpec defines the desired state of the PingSource (from the client).\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specwithcontenttype","title":"fn spec.withContentType","text":"<pre><code>withContentType(contentType)\n</code></pre> <p>\"ContentType is the media type of <code>data</code> or <code>dataBase64</code>. Default is empty.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specwithdata","title":"fn spec.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data is data used as the body of the event posted to the sink. Default is empty. Mutually exclusive with <code>dataBase64</code>.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specwithdatabase64","title":"fn spec.withDataBase64","text":"<pre><code>withDataBase64(dataBase64)\n</code></pre> <p>\"DataBase64 is the base64-encoded string of the actual event's body posted to the sink. Default is empty. Mutually exclusive with <code>data</code>.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specwithschedule","title":"fn spec.withSchedule","text":"<pre><code>withSchedule(schedule)\n</code></pre> <p>\"Schedule is the cron schedule. Defaults to <code>* * * * *</code>.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specwithtimezone","title":"fn spec.withTimezone","text":"<pre><code>withTimezone(timezone)\n</code></pre> <p>\"Timezone modifies the actual time relative to the specified timezone. Defaults to the system time zone. More general information about time zones: https://www.iana.org/time-zones List of valid timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#obj-specceoverrides","title":"obj spec.ceOverrides","text":"<p>\"CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specceoverrideswithextensions","title":"fn spec.ceOverrides.withExtensions","text":"<pre><code>withExtensions(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specceoverrideswithextensionsmixin","title":"fn spec.ceOverrides.withExtensionsMixin","text":"<pre><code>withExtensionsMixin(extensions)\n</code></pre> <p>\"Extensions specify what attribute are added or overridden on the outbound event. Each <code>Extensions</code> key-value pair are set on the event as an attribute extension independently.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#obj-specsink","title":"obj spec.sink","text":"<p>\"Sink is a reference to an object that will resolve to a uri to use as the sink.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkwithaudience","title":"fn spec.sink.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre> <p>\"Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkwithcacerts","title":"fn spec.sink.withCaCerts","text":"<pre><code>withCaCerts(caCerts)\n</code></pre> <p>\"CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkwithuri","title":"fn spec.sink.withUri","text":"<pre><code>withUri(uri)\n</code></pre> <p>\"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#obj-specsinkref","title":"obj spec.sink.ref","text":"<p>\"Ref points to an Addressable.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkrefwithapiversion","title":"fn spec.sink.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkrefwithkind","title":"fn spec.sink.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkrefwithname","title":"fn spec.sink.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.13.1/sources/v1beta2/pingSource/#fn-specsinkrefwithnamespace","title":"fn spec.sink.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\"</p>"}]}